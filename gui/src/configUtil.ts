import * as fs from "fs";
import * as path from "path";
import YAML from "yaml";

var doNotEditComment =
  "# DO NOT EDIT THIS FILE \n# This file is designed to be edited by \n# using the graphical editor or the API.\n";

export function readConfiguration(): any {
  return YAML.parse(
    fs.readFileSync(path.join("./configuration/", "settings.yml"), "utf-8")
  );
}

export function readStatConfiguration(): any {
  return YAML.parse(
    fs.readFileSync(path.join("./configuration/", "stats.yml"), "utf-8")
  );
}

export function writeConfiguration(writtenText: object) {
  console.log(writtenText);
  var write = YAML.stringify(writtenText);
  console.log(write);
  fs.writeFileSync(
    path.join("./configuration/", "settings.yml"),
    doNotEditComment + write
  );
}

export function writeStatConfiguration(writtenText: object) {
  var write = YAML.stringify(writtenText);
  fs.writeFileSync(path.join("./configuration/", "stats.yml"), write);
}

export type ConfType = {
  setupYet: boolean;
  storageLocation?: string;
  guestPermissions?: string;
  userList?: {
    name: string;
    globalPermissions: string;
    password: string;
    token: string;
  }[];
  pluginDatabase?: {
    name: string;
    source: string;
    permissions: string[];
    language: "js" | "ts";
  }[];
  iconPackDatabase?: { name: string; source: string; default: boolean;}[];
};

export default { readConfiguration, writeConfiguration };
